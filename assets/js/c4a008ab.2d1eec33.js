(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[612],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?i.createElement(f,o(o({ref:t},p),{},{components:n})):i.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6485:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var i=n(2122),r=n(9756),a=(n(7294),n(3905)),o=["components"],l={sidebar_position:2},s="Quick start",c={unversionedId:"starting",id:"starting",isDocsHomePage:!1,title:"Quick start",description:"Requirements",source:"@site/docs/starting.md",sourceDirName:".",slug:"/starting",permalink:"/docs/starting",editUrl:"https://github.com/esp32m/website/edit/master/website/docs/starting.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/intro"},next:{title:"Create New Project",permalink:"/docs/tutorial/create-project"}},p=[{value:"Requirements",id:"requirements",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Installation",id:"installation",children:[]},{value:"Compiling and running example",id:"compiling-and-running-example",children:[]}],u={toc:p};function d(e){var t=e.components,l=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-start"},"Quick start"),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"PC with Windows 10, Linux or MAC OS"),(0,a.kt)("li",{parentName:"ul"},"ESP32 module"),(0,a.kt)("li",{parentName:"ul"},"Serial programmer")),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"You need to have the following software installed:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"//www.python.org/downloads/"},"Python 3.x")," or more recent."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"//git-scm.com/downloads"},"Git 2.x")," or more recent."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"//nodejs.org/en/"},"NodeJS 16.x")," or more recent."),(0,a.kt)("li",{parentName:"ul"},"The latest ESP-IDF, installation instructions are ",(0,a.kt)("a",{parentName:"li",href:"//docs.espressif.com/projects/esp-idf/en/latest/esp32/get-started/index.html"},"here"),". Make sure you follow the first four steps in the article, including the ",(0,a.kt)("inlineCode",{parentName:"li"},"Step 4. Set up the environment variables"),". It is not necessary to follow subsequent steps, although you're welcome to do it to make sure your setup is correct and ready for ESP32 Manager."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"//classic.yarnpkg.com/en/docs/install/#windows-stable"},"Yarn Classic 1.x")," - only needed if you want to use UI.")),(0,a.kt)("p",null,"Initial application upload must be done via serial connection. Depending on the type of your ESP32 board/module, there are different ways to establish serial link to the PC.\nPlease review the following guide for details: ",(0,a.kt)("a",{parentName:"p",href:"//docs.espressif.com/projects/esp-idf/en/latest/esp32/get-started/establish-serial-connection.html"},"Establish Serial Connection with ESP32"),".\n",(0,a.kt)("a",{parentName:"p",href:"//www.google.com/search?q=esp32+serial+programmer"},"This seach")," also yields plenty of relevant guides and tutorials to connect ESP32 module to a PC over serial link.\nAfter the initial upload, subsequent application updates may be performed via OTA and embedded UI from any Web browser."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Clone ESP32 Manager core repository:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ git clone https://github.com/esp32m/core.git\n$ cd core\n$ git submodule update --init --recursive\n")),(0,a.kt)("h2",{id:"compiling-and-running-example"},"Compiling and running example"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Go to the ",(0,a.kt)("inlineCode",{parentName:"li"},"core/examples/basic")," folder and open the ",(0,a.kt)("inlineCode",{parentName:"li"},"main/main.cpp")," file in your favorite text editor."),(0,a.kt)("li",{parentName:"ul"},"Find the line ",(0,a.kt)("inlineCode",{parentName:"li"},'net::wifi::addAccessPoint("SSID", "password");')," and replace ",(0,a.kt)("inlineCode",{parentName:"li"},"SSID")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"password")," with yours."),(0,a.kt)("li",{parentName:"ul"},"Connect the ESP32 module/board to the PC."),(0,a.kt)("li",{parentName:"ul"},"Make sure you are in the ",(0,a.kt)("inlineCode",{parentName:"li"},"core/examples/basic")," directory, and run this command:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"$ python ../../esp32m.py --path idf /path/to/esp-idf build flash monitor\n")),(0,a.kt)("p",null,"In most cases it should be able to detect your serial port automatically. If not, just pass it int the command line using the ",(0,a.kt)("inlineCode",{parentName:"p"},"--port")," switch, for example: ",(0,a.kt)("inlineCode",{parentName:"p"},"--port /dev/ttyUSB0"),".\nWithin a couple of minutes, you should see something like this in the terminal: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"0:00:00:00.0011 I basic  starting 0.0.1\n0:00:00:00.0399 D config-vfs  config: {}\n0:00:00:00.0429 D config-vfs  XXX bytes loaded\n0:00:00:00.0436 I basic  init level 0\n0:00:00:00.0548 I wifi  changing mode: AP -> Disabled\n0:00:00:00.0553 I wifi  StaInitial -> StaConnecting\n0:00:00:00.0556 I basic  initialization complete\n0:00:00:00.0556 I wifi  changing mode: Disabled -> STA\n0:00:00:00.0558 I wifi  setting STA config\n0:00:00:00.0561 I wifi  connecting to SSID [any]...\n0:00:00:01.0381 I wifi  device initialized\n0:00:00:01.0591 D config-vfs  XXX bytes saved\n0:00:00:03.0433 I wifi  my IP: 192.168.0.100\n0:00:00:03.0436 I mqtt  connecting to mqtt://mqtt.lan\n0:00:00:03.0483 I wifi  StaConnecting -> StaConnected\n")),(0,a.kt)("p",null,"The most important line is ",(0,a.kt)("inlineCode",{parentName:"p"},"my IP: ...."),", it tells us that ESP32 was able to connect to your WiFi router successfully. If not - you will see an error telling you what's wrong.\nNote the IP address and open it in your favorite Web browser like this: ",(0,a.kt)("inlineCode",{parentName:"p"},"http://192.168.0.100"),". You should see this page:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"example-basic-ui",src:n(6565).Z})))}d.isMDXComponent=!0},6565:function(e,t,n){"use strict";t.Z=n.p+"assets/images/esp32m-example-basic-b3c8b2640083c24a44aaf4cc21748328.png"}}]);